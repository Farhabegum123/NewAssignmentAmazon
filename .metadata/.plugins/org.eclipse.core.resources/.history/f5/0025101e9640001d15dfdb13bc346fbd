package baseClassPackage;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.testng.ITestListener;
import org.testng.ITestResult;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeClass;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.MediaEntityBuilder;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.markuputils.ExtentColor;
import com.aventstack.extentreports.markuputils.MarkupHelper;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

public class Reports extends BaseClass implements ITestListener
 {

	public static ExtentHtmlReporter htmlReporter;
	public static ExtentReports extent;
	public static ExtentTest test;

	public static ExtentReports IntializeReport(){

		if(extent==null) {
			
			String timeStamp=new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
			String repName="test-output"+timeStamp+".html";
		// htmlReporter=new ExtentHtmlReporter(System.getProperty("user.dir")+"/test-output/"+repName);
htmlReporter=new ExtentHtmlReporter("C:\\Users\\farhana.begum\\pip_workSpace\\com.AutomationFrameworkAssesmnt\\test-output");
			 try {
				 htmlReporter.loadXMLConfig("C:\\Users\\farhana.begum\\pip_workSpace\\com.AutomationFrameworkAssesmnt\\extentConfig.xml");

			 }
			 catch(Exception ex) {
				 ex.printStackTrace();
			 }
	
			 extent=new ExtentReports();
			 extent.attachReporter(htmlReporter);
		extent.setSystemInfo("HostName", "LocalHost");
		extent.setSystemInfo("OS", "Windows");
		extent.setSystemInfo("Tester", "Farhana");
		extent.setSystemInfo("Browser", "Chrome"); 
		}
		return extent;
	
	}
	
	public void onTestStart() {
		String timeStamp=new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
		String repName="test-output"+timeStamp+".html";
		 htmlReporter=new ExtentHtmlReporter(System.getProperty("user.dir")+"/test-output/myReport.html"); 
		 
		 try {
			 htmlReporter.loadXMLConfig("C:\\Users\\farhana.begum\\pip_workSpace\\com.AutomationFrameworkAssesmnt\\extentConfig.xml");

		 }
		 catch(Exception ex) {
			 ex.printStackTrace();
		 }
		 
		 extent=new ExtentReports();
		 extent.attachReporter(htmlReporter);
	extent.setSystemInfo("HostName", "LocalHost");
	extent.setSystemInfo("OS", "Windows");
	extent.setSystemInfo("Tester", "Farhana");
	extent.setSystemInfo("Browser", "Chrome"); 
	
	htmlReporter.config().setDocumentTitle("Google Class Test"); // Title of the report
	htmlReporter.config().setReportName("Google Class Meeting"); //Name of the Report
	htmlReporter.config().setTheme(Theme.STANDARD);
}
	
	public void onTestSuccess(ITestResult tr) {
		test=extent.createTest(tr.getName());
		test.log(Status.PASS, MarkupHelper.createLabel(tr.getName(), ExtentColor.GREEN));
		try {
			if(tr.getStatus()==ITestResult.SUCCESS) {
				String temp=captureScreenShot();
				test.pass(tr.getThrowable().getMessage(), MediaEntityBuilder.createScreenCaptureFromPath(temp).build());
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		test.log(Status.INFO, "Test case status");
	}
	
   public void onTestFailure(ITestResult tr)	{
	   test=extent.createTest(tr.getName());
	   test.log(Status.FAIL,  MarkupHelper.createLabel(tr.getName(), ExtentColor.RED));
	   
	   try {
		   if(tr.getStatus()==ITestResult.FAILURE) {
			   String temp=captureScreenShot();
		        test.fail(tr.getThrowable().getMessage(),MediaEntityBuilder.createScreenCaptureFromPath(temp).build());
		   }
	   }catch(Exception e) {
		   e.printStackTrace();
	   }
	   test.log(Status.INFO, "Test case status");
   }



@AfterTest
	 public void endReport() {
		 extent.flush();
	 }
	 
}
